// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  member
}

enum AvalibleStatus {
  active
  inactive
}

model users {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  email        String         @unique
  emailcomfirm Boolean        @default(false)
  role         UserRole       @default(member)
  status       AvalibleStatus @default(active)
  createAt     String
  updateAt     String
  avatar       String         @db.LongText
  carts        carts[]
  receipts     receipts[]
}

model receipts {
  id          Int              @id @default(autoincrement())
  address     String           @db.LongText
  phoneNumber String
  status      ReceiptStatuss   @default(shopping)
  totalAmount Int
  user        users            @relation(fields: [userId], references: [id])
  userId      Int
  details     receiptDetails[]
}

enum ReceiptStatuss {
  shopping
  pendding
  accepted
  shipping
  done
}

model receiptDetails {
  id         Int      @id @default(autoincrement())
  name       String
  quantity   Int
  price      Int
  totalPrice Int
  product    products @relation(fields: [productId], references: [id])
  productId  Int
  receipt    receipts @relation(fields: [receiptId], references: [id])
  receiptId  Int
}

model products {
  id        Int              @id @default(autoincrement())
  avatar    String           @db.LongText
  name      String           @unique
  origin    String?
  tar       String?
  nicotine  String?
  smell     String?
  price     Int
  status    AvalibleStatus   @default(active)
  productId Int
  category  categories       @relation(fields: [productId], references: [id])
  carts     carts[]
  receipts  receiptDetails[]
}

model carts {
  id        Int      @id @default(autoincrement())
  avatar    String   @db.LongText
  name      String
  price     Int
  quantity  Int
  userId    Int
  user      users    @relation(fields: [userId], references: [id])
  productId Int
  products  products @relation(fields: [productId], references: [id])
}

model categories {
  id       Int            @id @default(autoincrement())
  title    String         @unique
  status   AvalibleStatus @default(active)
  products products[]
}
